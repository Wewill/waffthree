<?php
/**
 * Blocks setup and functions.
 *
 * @package WaffTwo\Blocks
 */

namespace WaffTwo\Blocks;

use function WaffTwo\Core\waff_do_markdown as waff_do_markdown;
use function WaffTwo\Theme\waff_get_edition_badge as waff_get_edition_badge;
use function WaffTwo\Core\waff_HTMLToRGB as waff_HTMLToRGB; 
use function WaffTwo\Core\waff_get_image_id_by_url as waff_get_image_id_by_url;
//use function Go\hex_to_rgb as hex_to_rgb; 


/**
 * Set up theme defaults and register supported WordPress features.
 *
 * @return void
 */
function setup() {
	$n = function( $function ) {
		return __NAMESPACE__ . "\\$function";
	};
	
	// Register Theme Blocks
	add_filter( 'rwmb_meta_boxes', $n( 'waff_blocks_register_meta_boxes' ) );

	// Allow / Disallow some blocks 
	//add_filter( 'allowed_block_types', $n( 'waff_allowed_block_types' ), 20, 2 );

	// Adds custom theme options to wp bootstrap blocks plugin
	add_action( 'enqueue_block_editor_assets', $n( 'waff_wp_boostrap_enqueue_block_editor_assets' ) );
}


/**
 * Setup Blocks ( helped from MB Blocks php code )
 */

function waff_blocks_register_meta_boxes( $meta_boxes ) {
    $prefix = '';

	// WA Lastest posts
    $meta_boxes[] = [
        'title'           => esc_html__( '(WA) Lastest posts', 'waff' ),
        'id'              => 'wa-lastest-posts',
        'fields'          => [
            [
                'id'   => $prefix . 'waff_lp_title',
                'type' => 'text',
                'name' => esc_html__( 'Featured title', 'waff' ),
                'std'  => 'Actus',
                'placeholder' => esc_html__( 'Title', 'waff' ),
            ],
            [
                'id'      => $prefix . 'waff_lp_limit',
                'name'    => esc_html__( 'Limit posts to ?', 'waff' ),
                'type'    => 'radio',
                'desc'    => esc_html__( 'Choose the number of lastest posts to show', 'waff' ),
                'std'     => 5,
                'options' => [
                    4 => esc_html__( '4', 'waff' ),
                    5 => esc_html__( '5', 'waff' ),
                    6 => esc_html__( '6', 'waff' ),
                ],
                'inline'  => 1,
			],
			[
                'id'    => $prefix . 'waff_lp_morelink',
                'type'  => 'switch',
                'name'  => esc_html__( 'Diplay more link ?', 'waff' ),
                'style' => 'rounded',
			],
			[
                'id'                => $prefix . 'waff_lp_posttype',
                'name'              => esc_html__( 'Select post type', 'waff' ),
                'type'              => 'select',
                'desc'              => esc_html__( 'Choose which post is the lastest post. Default : posts', 'waff' ),
                'std'               => 'post',
                //'placeholder'       => esc_html__( 'Placeholder', 'waff' ),
                'options'           => [
                    'post' => esc_html__( 'post', 'waff' ),
                    'page' => esc_html__( 'page', 'waff' ),
                    'film' => esc_html__( 'film', 'waff' ),
                    'jury' => esc_html__( 'jury', 'waff' ),
                ],
                'required'          => 1,
                'label_description' => esc_html__( 'Label', 'waff' ),
                //'before'            => 'html before',
                //'after'             => 'html after',
                //'class'             => 'Customcss',
                'key'               => 'value',
			],	
			[
                'id'         => $prefix . 'waff_lp_categories',
                'type'       => 'taxonomy',
                'name'       => esc_html__( 'Select categories', 'waff' ),
                'taxonomy'   => 'category',
                'desc'       => esc_html__( 'Choose to limit to those categories. If empty, all the categories will be showed. Only works with posts.', 'waff' ),
                'field_type' => 'checkbox_list',
				'multiple' => true,
				'select_all_none' => true,
				'query_args'  => array(
					'post_status'    => 'publish',
					'posts_per_page' => - 1,
				),
				'hidden' => array( 'waff_lp_posttype', '!=', 'post' ),
            ],	
		
		],
        'category'        => 'layout',
        'icon'            => 'format-standard',
        'description'     => esc_html__( 'Display lastest posts', 'waff' ),
        'keywords'        => ['lastest', 'posts', 'blog', 'articles'],
        'supports'        => [
            'anchor'          => true,
            'customClassName' => true,
            'align'           => ['wide'], // left, center, right, 
        ],
        //'enqueue_style'  => 'customCSS',
        //'enqueue_script' => 'CustomJS',
		//'enqueue_assets' => 'CustomCallback',
		'render_callback' => 'WaffTwo\Blocks\wa_lastest_posts_callback',
        'type'            => 'block',
		'context'         => 'side',
		//Special attrs
        //'key'       	  => 'value',
	];
	
	// WA Partners
	$meta_boxes[] = [
		'title'           => esc_html__( '(WA) Partners', 'waff' ),
		'id'              => 'wa-partners',
		'fields'          => [
			[
				'id'         => $prefix . 'waff_pn_categories',
				'type'       => 'taxonomy',
				'name'       => esc_html__( 'Select categories', 'waff' ),
				'taxonomy'   => 'partenaire-category',
				'desc'       => esc_html__( 'Choose to display those categories. If empty, none of the categories will be displayed.', 'waff' ),
				'field_type' => 'checkbox_list',
				'multiple' => true,
				'select_all_none' => true,
				'query_args'  => array(
					'post_status'    => 'publish',
					'posts_per_page' => - 1,
				),
				//'hidden' => array( 'waff_lp_posttype', '!=', 'post' ),
			],	
		
		],
		'category'        => 'layout',
		'icon'            => 'admin-users',
		'description'     => esc_html__( 'Display the current edition partners', 'waff' ),
		'keywords'        => ['lastest', 'posts', 'blog', 'articles'],
		'supports'        => [
			'anchor'          => true,
			'customClassName' => true,
			'align'           => ['wide'], // left, center, right, 
		],
		//'enqueue_style'  => 'customCSS',
		//'enqueue_script' => 'CustomJS',
		//'enqueue_assets' => 'CustomCallback',
		'render_callback' => 'WaffTwo\Blocks\wa_partners_callback',
		'type'            => 'block',
		'context'         => 'side',
		//Special attrs
		//'key'       	  => 'value',
	];
	
	// WA Edito
	$meta_boxes[] = [
        'title'          => esc_html__( '(WA) Edito', 'waff' ),
        'id'             => 'wa-edito',
        'fields'         => [
            [
                'id'   => $prefix . 'waff_e_title',
                'type' => 'text',
                'name' => esc_html__( 'Title', 'waff' ),
                'std'  => 'Voici le titre de l\'édito',
            ],
            [
                'id'   => $prefix . 'waff_e_leadcontent',
                'type' => 'textarea',
                'name' => esc_html__( 'Lead content', 'waff' ),
                'desc' => esc_html__( 'Displayed in a bigger size. Markdown is available.', 'waff' ),
            ],
            [
                'id'   => $prefix . 'waff_e_content',
                'type' => 'textarea',
                'name' => esc_html__( 'Content', 'waff' ),
                'desc' => esc_html__( 'Markdown is available.', 'waff' ),
            ],
            [	
                'id'   => $prefix . 'waff_e_image',
                'type' => 'image_upload',
				'name' => esc_html__( 'Image', 'waff' ),
                'image_size'       => 'page-featured-image',
                'max_file_uploads' => 1,
            ],
            [
                'id'    => $prefix . 'waff_e_editionbadge',
                'type'  => 'switch',
                'name'  => esc_html__( 'Display edition badge ?', 'waff' ),
                'style' => 'rounded',
            ],
            [
                'id'    => $prefix . 'waff_e_morelink',
                'type'  => 'switch',
                'name'  => esc_html__( 'Display more link ?', 'waff' ),
                'style' => 'rounded',
            ],
            [
                'id'   => $prefix . 'waff_e_moreurl',
                'type' => 'url',
                'name'  => esc_html__( 'More URL', 'waff' ),
            ],
		],
		'category'       => 'layout',
        'icon'           => 'format-quote',
        'description'     => esc_html__( 'Display edito bloc', 'waff' ),
        'keywords'       => ['edito', 'post', 'text'],
        'supports'       => [
            'anchor'          => true,
            'customClassName' => true,
            'align'           => ['wide', 'full'],
        ],
        //'render_code'    => '{{Twix}}',
        //'enqueue_style'  => 'customCSS',
        //'enqueue_script' => 'CustomJS',
        //'enqueue_assets' => 'CustomCallback',
		'render_callback' => 'WaffTwo\Blocks\wa_edito_callback',
        'type'           => 'block',
        'context'        => 'side',
        //'Keyattrs'       => 'Value',
	];

	// WA Awards
    $prefix = 'waff_'; // A SUPPR APRES ≠ 
	$meta_boxes[] = [
		'title'          => esc_html__( '(WA) Awards', 'waff' ),
		'id'             => 'wa-awards',
		'fields'         => [
            [
                'id'   => $prefix . 'a_title',
                'type' => 'text',
                'name' => esc_html__( 'Title', 'waff' ),
                'std'  => esc_html__( 'Awards', 'waff' ),
                'placeholder' => esc_html__( 'Title', 'waff' ),
			],
			[
				'id'   => $prefix . 'a_leadcontent',
				'type' => 'textarea',
				'name' => esc_html__( 'Lead content', 'waff' ),
				'desc' => esc_html__( 'Displayed in a bigger size. Markdown is available.', 'waff' ),
			],
			[
				'id'   => $prefix . 'a_content',
				'type' => 'textarea',
				'name' => esc_html__( 'Content', 'waff' ),
				'desc' => esc_html__( 'Markdown is available.', 'waff' ),
			],
			[
				'id'         => $prefix . 'a_edition',
				'type'       => 'taxonomy',
				'name'       => esc_html__( 'Select edition', 'waff' ),
				'taxonomy'   => 'edition',
				'desc'       => esc_html__( 'Choose to display edition awards. If empty, none of the editions will be displayed.', 'waff' ),
				'field_type' => 'radio_list',
				'multiple' => false,
				'select_all_none' => false,
				'query_args'  => array(
					'post_status'    => 'publish',
					'posts_per_page' => - 1,
				),
				//'hidden' => array( 'waff_lp_posttype', '!=', 'post' ),
			],
            [
                'id'      => $prefix . 'a_display',
                'name'    => esc_html__( 'Choose display', 'waff' ),
                'type'    => 'select',
                'desc'    => esc_html__( 'Choose to display all the awards or selected awards', 'waff' ),
                'std'     => 5,
                'options' => [
                    0 => esc_html__( 'All', 'waff' ),
                    1 => esc_html__( 'Master awards only', 'waff' ),
                    2 => esc_html__( 'Standard awards only', 'waff' ),
                ],
                'inline'  => 1,
			],
			[
				'id'    => $prefix . 'a_morelink',
				'type'  => 'switch',
				'name'  => esc_html__( 'Display more link ?', 'waff' ),
				'style' => 'rounded',
			],
			[
				'id'   => $prefix . 'a_moreurl',
				'type' => 'url',
				'name'  => esc_html__( 'More URL', 'waff' ),
				'hidden' => array( $prefix . 'a_morelink', '!=', 1 ),
			],
		],
		'category'       => 'layout',
		'icon'           => 'megaphone',
		'description'     => esc_html__( 'Display awards bloc', 'waff' ),
		'keywords'       => ['awards', 'film', 'post', 'text'],
		'supports'       => [
			'anchor'          => true,
			'customClassName' => true,
			'align'           => ['wide', 'full'],
		],
		//'render_code'    => '{{Twix}}',
		//'enqueue_style'  => 'customCSS',
		//'enqueue_script' => 'CustomJS',
		//'enqueue_assets' => 'CustomCallback',
		'render_callback' => 'WaffTwo\Blocks\wa_awards_callback',
		'type'           => 'block',
		'context'        => 'side',
		//'Keyattrs'       => 'Value',
	];

	// WA Playlist
	$meta_boxes[] = [
		'title'          => esc_html__( '(WA) Playlist', 'waff' ),
		'id'             => 'wa-playlist',
		'fields'         => [
			[
				'id'   => $prefix . 'pl_title',
				'type' => 'text',
				'name' => esc_html__( 'Title', 'waff' ),
				'std'  => esc_html__( 'Title', 'waff' ),
				'placeholder' => esc_html__( 'Title', 'waff' ),
			],
			[
				'id'   => $prefix . 'pl_leadcontent',
				'type' => 'textarea',
				'name' => esc_html__( 'Lead content', 'waff' ),
				'desc' => esc_html__( 'Displayed in a bigger size. Markdown is available.', 'waff' ),
			],
			[
				'id'   => $prefix . 'pl_content',
				'type' => 'textarea',
				'name' => esc_html__( 'Content', 'waff' ),
				'desc' => esc_html__( 'Markdown is available.', 'waff' ),
			],
			[
                'id'         => $prefix . 'pl_videos',
                'type'       => 'oembed',
                'name'       => __( 'Video(s)', 'waff' ),
                'std'        => 'https://youtu.be/...',
                'required'   => true,
                'clone'      => true,
                'sort_clone' => true,
                'max_clone'  => 99,
                'add_button' => __( 'Add more video to the playlist', 'waff' ),
            ],
			[
				'id'    => $prefix . 'pl_autoplay',
				'type'  => 'switch',
				'name'  => esc_html__( 'Autoplay videos ?', 'waff' ),
				'style' => 'rounded',
			],
			[
				'id'    => $prefix . 'pl_playlist',
				'type' => 'text',
				'name'  => esc_html__( 'Fill youtube playlist ID here if you want to show it', 'waff' ),
			],
		],
		'category'       => 'layout',
		'icon'           => 'video-alt3',
		'description'     => esc_html__( 'Display a video playlist bloc ( better with youtube ).', 'waff' ),
		'keywords'       => ['video', 'youtube', 'playlist', 'film', 'post', 'text'],
		'supports'       => [
			'anchor'          => true,
			'customClassName' => true,
			'align'           => ['wide', 'full'],
		],
		//'render_code'    => '{{Twix}}',
		//'enqueue_style'  => 'customCSS',
		//'enqueue_script' => 'CustomJS',
		//'enqueue_assets' => 'CustomCallback',
		'render_callback' => 'WaffTwo\Blocks\wa_playlist_callback',
		'type'           => 'block',
		'context'        => 'side',
		//'Keyattrs'       => 'Value',
	];
	
    return $meta_boxes;
}

function wa_lastest_posts_callback( $attributes, $is_preview = false, $post_id = null ) {

	// print_r($attributes);

	// Fields data.
	if ( empty( $attributes['data'] ) ) {
		return;
	}
	
	// Unique HTML ID if available.
	$id = ( $attributes['name'] ?? '' ) . '-' . ( $attributes['id'] ?? '' );
	if ( ! empty( $attributes['anchor'] ) ) {
		$id = $attributes['anchor'];
	}

	// Custom CSS class name.
	$themeClass = 'featured mt-10 mb-10 contrast--dark fix-vh-50';
	$class = ( $attributes['name'] ?? '' ) . ' ' . $themeClass . ' ' . ( $attributes['className'] ?? '' );
	if ( ! empty( $attributes['align'] ) ) {
		$class .= " align{$attributes['align']}";
	}

	?>
	<!-- #Featured -->
	<section id="featured-<?= $id ?>" class="<?= $class ?>" style="background-color: <?= mb_get_block_field( 'background_color' ) ?>">
		<div class="container-fluid px-0">
		<div class="row g-0 align-items-top">
			<div class="col-md-2 p-4" data-aos="fade-right">
				<h6 class="headline d-inline"><?= mb_get_block_field( 'waff_lp_title' ) ?></h6>
			</div>
			<?php 
			$sticky_posts 	= array();
			$categories 	= array();
			// mb_get_block_field / mb_the_block_field
			$limit 			= esc_attr(mb_get_block_field( 'waff_lp_limit' ));
			$morelink 		= esc_attr(mb_get_block_field( 'waff_lp_morelink' ));
			$posttype 		= esc_attr(mb_get_block_field( 'waff_lp_posttype' )); 
			
			$categories = [];
			if ( $posttype === 'post' && array_key_exists('waff_lp_categories', $attributes['data'])) {
				$categories 	= $attributes['data']['waff_lp_categories']; 
				// print_r($categories);
				// echo implode(',',array_values($categories));
			}

			$sticky_posts = get_posts(array(
				'post_type'			=> $posttype,
				'numberposts' 		=> $limit, 
				'post_status' 		=> 'publish', // Show only the published posts
				'orderby'			=> 'post_date',
				'order'				=> 'DESC',
				// Only the stiky ones !
				'post__in'  		=> get_option( 'sticky_posts' ),
				'ignore_sticky_posts' => true,
				// Limit to selected cats 
				'category'		=> implode(',',array_values($categories)),
			));
			
			$args = array( 
				'post_type'			=> $posttype,
				'numberposts' 		=> $limit, 
				'post_status' 		=> 'publish', // Show only the published posts
				'orderby'			=> 'post_date',
				'order'				=> 'DESC',
				// All but not sticky !
				'post__not_in'  => get_option( 'sticky_posts' ),
				// Limit to selected cats 
				'category'		=> implode(',',array_values($categories)),
			);
			$index = 0;
			$recent_posts = get_posts($args);
			$recent_posts = array_merge($sticky_posts, $recent_posts);

			foreach( $recent_posts as $post_item ) : 
				$post_id 				= esc_attr($post_item->ID);
				$post_color 			= rwmb_meta( '_waff_bg_color_metafield', $args, $post_id );
				$post_color				= ($post_color!='')?$post_color:'#444444'; //00ff97
				$rgb_post_color			= waff_HTMLToRGB($post_color, 'array');
				$the_categories 		= get_the_category($post_id);
				$excerpt = '';
				$excerpt = wp_strip_all_tags(get_the_excerpt($post_id));
				if ( strlen($excerpt) > 160 ) {
					$excerpt = substr($excerpt, 0, 160);
					$excerpt = substr($excerpt, 0, strrpos($excerpt, ' ')) . '...';
				}
				if ( ++$index === 1 ) { 
					?>
					<!-- First -->
					<div class="col-md-5 p-0 vh-50 bg-dark img-shifted shift-right nofilter-hover" data-aos="fade-down" data-aos-delay="200">
						<!-- Images -->
						<!-- https://yoksel.github.io/svg-gradient-map/ -->
						<svg class="duotone-filters position-absolute" xmlns="http://www.w3.org/2000/svg">	
							<filter id="duotone_featured_<?= $post_id; ?>" x="-10%" y="-10%" width="120%" height="120%" filterUnits="objectBoundingBox" primitiveUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
								<feColorMatrix type="matrix" values="1 0 0 0 0
							1 0 0 0 0
							1 0 0 0 0
							0 0 0 1 0" in="SourceGraphic" result="colormatrix"></feColorMatrix>
								<feComponentTransfer in="colormatrix" result="componentTransfer">
									<feFuncR type="table" tableValues="0 <?= $rgb_post_color[0]/255; ?>"/>
									<feFuncG type="table" tableValues="0 <?= $rgb_post_color[1]/255; ?>"/>
									<feFuncB type="table" tableValues="0 <?= $rgb_post_color[2]/255; ?>"/>
									<feFuncA type="table" tableValues="0 1"/>
								</feComponentTransfer>
								<feBlend mode="normal" in="componentTransfer" in2="SourceGraphic" result="blend"></feBlend>
							</filter>
						</svg>
						<div class="bg-image bg-cover bg-position-top-center image--origin filter--<?= $post_id; ?>" style="background-image: url('<?php echo get_the_post_thumbnail_url($post_id, 'post-thumbnail'); ?>');"></div>
						<div class="bg-image bg-cover bg-position-top-center image--filtered filter--<?= $post_id; ?>" style="background-image: url('<?php echo get_the_post_thumbnail_url($post_id, 'post-thumbnail'); ?>');"></div>
						<!-- Content -->
						<div class="card bg-transparent text-white h-100 p-4 border-0 rounded-0 d-flex flex-column justify-content-between">
							<h6 class="display d-inline --action-2 f-14 link-white">
							<?php if ( ! empty( $the_categories ) ) { echo '<a href="' . esc_url( get_category_link( $the_categories[0]->term_id ) ) . '">' . esc_html( $the_categories[0]->name ) . '</a>'; } ?>
							</h6>
							<div class="main-post">
								<p class="card-date text-white mt-1 mb-0"><?php echo get_the_date('j F Y', $post_id); ?></p>
								<h2 class="card-title w-60"><a href="<?php echo get_permalink($post_id) ?>" class="stretched-link link-white"><?php echo $post_item->post_title ?></a></h2>
							</div>
							<p class="card-text"><?php echo $excerpt; ?></p>
						</div>
					</div>
					<style scoped> 
						#featured-<?= $id ?> .bg-image {
							transition: opacity .25s;
						}
						
						#featured-<?= $id ?> img.filter--<?= $post_id; ?>, 
						#featured-<?= $id ?> .bg-image.filter--<?= $post_id; ?>.image--filtered  {
							-webkit-filter: url(#duotone_featured_<?= $post_id; ?>);
							-moz-filter: url(#duotone_featured_<?= $post_id; ?>);
							-o-filter: url(#duotone_featured_<?= $post_id; ?>);
							-ms-filter: url(#duotone_featured_<?= $post_id; ?>);
							filter: url(#duotone_featured_<?= $post_id; ?>);
						}

						#featured-<?= $id ?> .nofilter-hover:hover img { 
							-webkit-filter: none;
							-moz-filter: none;
							-o-filter: none;
							-ms-filter: none
							filter: none;
						}

						#featured-<?= $id ?> .nofilter-hover:hover .bg-image.image--filtered {
							opacity:0;
						}
					</style>
					<!-- END : First --> 
					<?php
					continue;
				}
				if ( $index === 2 ) { 
					?>
				<div class="col-md-5 p-0 min-vh-50 min-h-50" data-aos="fade-down" data-aos-delay="400">
				<div class="list-group list-group-flush h-100 rounded-0">
					<!-- Second -->
					<a id="post-<?= $post_id; ?>" href="<?php echo get_permalink($post_id) ?>" class="list-group-item list-group-item-dark list-group-item-action d-flex flex-column align-items-start justify-content-start h-55 pr-0 overflow-hidden nofilter-hover">
						<p class="list-date text-muted mt-2 mb-0"><?php echo get_the_date('j F Y', $post_id); ?></p>
						<div class="d-flex w-100 justify-content-between ">
							<div class="second-post">
								<h6 class="normal mb-3 mt-0"><?php echo $post_item->post_title ?></h6>
								<small><?php echo $excerpt; ?></small>
							</div>
							<?php echo get_the_post_thumbnail($post_id, 'thumbnail', array( 'class' => 'img-fluid responsive float-right pl-2 max-w-50 filter--'.$post_id )); ?>
						</div>
					</a>
					<style scoped> 
						.list-group a#post-<?= $post_id; ?>.list-group-item:hover { background-color:<?= $post_color ?> !important; }
						/* #featured-<?= $id ?> .bg-image {
							transition: opacity .25s;
						}
						
						#featured-<?= $id ?> img.filter--<?= $post_id; ?>, 
						#featured-<?= $id ?> .bg-image.filter--<?= $post_id; ?>.image--filtered  {
							-webkit-filter: url(#duotone_featured_<?= $post_id; ?>);
							-moz-filter: url(#duotone_featured_<?= $post_id; ?>);
							-o-filter: url(#duotone_featured_<?= $post_id; ?>);
							-ms-filter: url(#duotone_featured_<?= $post_id; ?>);
							filter: url(#duotone_featured_<?= $post_id; ?>);
						}

						#featured-<?= $id ?> .nofilter-hover:hover img { 
							-webkit-filter: none;
							-moz-filter: none;
							-o-filter: none;
							-ms-filter: none
							filter: none;
						}

						#featured-<?= $id ?> .nofilter-hover:hover .bg-image.image--filtered {
							opacity:0;
						} */
					</style>
					<!-- END : Second --> 
					<?php
					continue;
				}
				if ( $index > $limit ) { continue; }
				?>
				<a id="post-<?= $post_id; ?>" href="<?php echo get_permalink($post_id) ?>" class="third-posts list-group-item list-group-item-dark list-group-item-action d-flex flex-column align-items-start justify-content-center h-15">
						<p class="list-date text-muted mt-1 mb-0"><?php echo get_the_date('j F Y', $post_id); ?></p>
						<h6 class="normal mb-1 mt-0"><?php echo $post_item->post_title ?></h6>
				</a>
				<style scoped> 
					.list-group a#post-<?= $post_id; ?>.list-group-item:hover { background-color:<?= $post_color ?> !important; } 
				</style>
			<?php endforeach; ?>
			
				</div>
			</div>
		</div>
	</div>
	</section>
	<!-- END: #Featured -->
	<?php
}

function wa_partners_callback( $attributes, $is_preview = false, $post_id = null ) {

	//print_r($attributes);
	global $current_edition_id, $current_edition_films_are_online;

	// Fields data.
	if ( empty( $attributes['name'] ) ) {
		return;
	}
	
	// Unique HTML ID if available.
	$id = ( $attributes['name'] ?? '' ) . '-' . ( $attributes['id'] ?? '' );
	if ( ! empty( $attributes['anchor'] ) ) {
		$id = $attributes['anchor'];
	}

	// Custom CSS class name.
	$themeClass = 'partners mt-1 mb-1 contrast--light';
	$class = ( $attributes['name'] ?? '' ) . ' ' . $themeClass . ' ' . ( $attributes['className'] ?? '' );
	if ( ! empty( $attributes['align'] ) ) {
		$class .= " align{$attributes['align']}";
	}

	?>
	<!-- #Partners -->
	<section id="partners-<?= $id ?>" class="<?= $class ?>" style="background-color: <?= mb_get_block_field( 'background_color' ) ?>">
		<div class="container-fluid px-0">

				<?php 
				$categories 	= array();
				$posttype 		= 'partenaire';
				$categories 	= $attributes['data']['waff_pn_categories']; 

				foreach($categories as $category) {

					$term = get_term_by( 'id', $category, 'partenaire-category' );
					if ( !empty($term) ) {
						?>

						<p class="subline mt-6 mb-2"><?= $term->name; ?></p>
						<hr/>
						<div class="row g-0 align-items-top">

						<?php
					}

					$args = array( 
						'numberposts' 		=> -1, // No limit
						'post_status' 		=> 'publish', // Show only the published posts
						'orderby'			=> 'post_date',
						'order'				=> 'DESC',
						'post_type'			=> $posttype,
						// Limit to selected cats and edition
						'tax_query' => array(
							array(
								'taxonomy' => 'edition',
								'field' => 'term_id', 
								'terms' => $current_edition_id,
								'include_children' => false
							),
							array(
								'taxonomy' => 'partenaire-category',
								'field' => 'term_id',
								'terms' => $category,
								'operator' => 'IN'
							),
						)
					);
					$partners = get_posts($args);
	
					foreach( $partners as $post ) : 

						$id 		= (( $post->ID )?$post->ID:get_the_ID());
						$link 		= types_render_field( 'p-link', array('id' => $id) );
						// Post Thumbnail
						$featured_img_urls = array();
						$partenaire_featured_sizes = array(
							//'full',
							'medium_large', // 768px
							'medium', // 300px
							'partenaire-featured-image', // 150px
							'partenaire-featured-image-x2', // 200px
						);
						$selected_featured_sizes = $partenaire_featured_sizes;
						if ( has_post_thumbnail($post) ) {  //is_singular() &&
							$featured_img_id     		= get_post_thumbnail_id($post);
							$featured_img_url_full 		= get_the_post_thumbnail_url($post);
							foreach ($selected_featured_sizes as $size) {
								$featured_img_url = wp_get_attachment_image_src( $featured_img_id, $size ); // OK
								$featured_img_urls[$size] = ( !empty($featured_img_url[0]) )?$featured_img_url[0]:$featured_img_url_full; 
							}
						}
						$featured_img_caption = $post->post_title;
						
					?>
						
						<div id="p-<?= $id ?>" class="col-3 col-sm-2 partner-slide-item d-inline-block p-2 p-sm-4">
							<a href="<?= esc_url($link) ?>" class="color-black link link-dark" title="<?php echo $post->post_title; ?>">
								<figure title="<?php echo esc_attr($featured_img_description); ?>">
									<picture class="lazy">
									<!-- Breakpoint : xl -->
									<data-src media="(min-width: 1200px)"
											srcset="<?= $featured_img_urls['medium_large']; ?>" type="image/jpeg"></data-src>
									<!-- Breakpoint : lg -->
									<data-src media="(min-width: 990px)"
											srcset="<?= $featured_img_urls['medium']; ?>" type="image/jpeg"></data-src>
									<!-- Breakpoint : sm -->
									<data-src media="(min-width: 576px)"
											srcset="<?= $featured_img_urls['partenaire-featured-image']; ?>" type="image/jpeg"></data-src>
									<data-img src="<?= $featured_img_urls['partenaire-featured-image']; ?>" alt="<?= esc_html($featured_img_caption); ?>" class="img-fluid" style="object-fit: cover; width: 100%;"></data-img> <!-- style="height: 600px;" -->
									</picture>
									<!--
									Sizes :
									<?php print_r($featured_img_urls); ?>  
									-->
								</figure>
							</a>
						</div>

					<?php endforeach; 

					?>
					</div>
					<?php
				}
			?>
		</div>
	</section>
	<!-- END: #Partners -->
	<?php
}

function wa_edito_callback( $attributes, $is_preview = false, $post_id = null ) {
	
	//print_r($attributes);

	// Fields data.
	if ( empty( $attributes['data'] ) ) {
		return;
	}
	
	// Unique HTML ID if available.
	$id = ( $attributes['name'] ?? '' ) . '-' . ( $attributes['id'] ?? '' );
	if ( ! empty( $attributes['anchor'] ) ) {
		$id = $attributes['anchor'];
	}

	// Custom CSS class name.
	$themeClass = 'edito mt-10 mb-10 contrast--light fix-vh-100';
	$class = ( $attributes['name'] ?? '' ) . ' ' . $themeClass . ' ' . ( $attributes['className'] ?? '' );
	if ( ! empty( $attributes['align'] ) ) {
		$class .= " align{$attributes['align']}";
	}

	$image = mb_get_block_field('waff_e_image');

	?>
	<!-- #Edito -->
	<section id="edito-<?= $id ?>" class="<?= $class ?>" style="background-color: <?= mb_get_block_field( 'background_color' ) ?>">
		<div class="container-fluid px-0">
			<div class="row g-0 align-items-center">
				<div class="col-md-5 d-flex flex-column justify-content-center min-h-100" data-aos="fade-right">
					<div class="p-4">
					
					<?php if ( mb_get_block_field( 'waff_e_editionbadge' ) == 1 ) echo waff_get_edition_badge(); ?>

					</div>
					<div class="p-4">
						<h2 class="mb-2"><?= mb_get_block_field( 'waff_e_title' ) ?></h2>
					</div>
					<div class="p-4">
						<article class="edito">
							<p class="lead mb-5"><span class="h6 headline d-inline">Édito</span> <?= waff_do_markdown(mb_get_block_field( 'waff_e_leadcontent' )) ?></p>
							<p><?= waff_do_markdown(mb_get_block_field( 'waff_e_content' )) ?></p>
							<?php if ( mb_get_block_field( 'waff_e_morelink' ) == 1 ) : ?>
							<a class="btn btn-outline-dark mt-4" href="<?= mb_get_block_field( 'waff_e_moreurl' ) ?>">Découvrir...</a>
							<?php endif; ?>
						</article>
					</div>
				</div>
				<div class="col-md-2 d-none d-md-block bg-secondary"></div>
				<div class="col-md-5 overflow-hidden bg-bgcolor" data-aos="fade-left"> 
					<?php if ( count($image) > 0 ) : ?>
						<?php foreach ( $image as $im ) : ?>
							<figure class="img-shifted shift-right vh-100">
								<div class="bg-image bg-cover bg-position-top-center" style="background-image: url('<?php echo $im['full_url'] ?>');">
								<?php $im['alt'] = 'Legende'; if ( $im['alt'] || $im['description'] ) : ?>
								<figcaption><strong>© <?= esc_html($im['alt']); ?></strong> <?= esc_html($im['description']); ?></figcaption>
								<?php endif; /* If captions */ ?>
								</div>	
							</figure>
						<?php endforeach; ?>
					<?php endif; ?>
				</div>
			</div>
		</div>
	</section>
	<!-- END: #Edito -->
	<?php
}

function wa_awards_callback( $attributes, $is_preview = false, $post_id = null ) {
	
	//print_r($attributes);
	//global $current_edition_id, $current_edition_films_are_online;

	// Fields data.
	if ( empty( $attributes['data'] ) ) {
		return;
	}
	
	// Unique HTML ID if available.
	$id = ( $attributes['name'] ?? '' ) . '-' . ( $attributes['id'] ?? '' );
	if ( ! empty( $attributes['anchor'] ) ) {
		$id = $attributes['anchor'];
	}

	// Custom CSS class name.
	$themeClass = 'awards mt-5 mt-sm-10 mb-5 mb-sm-10 contrast--light';
	$class = ( $attributes['name'] ?? '' ) . ' ' . $themeClass . ' ' . ( $attributes['className'] ?? '' );
	if ( ! empty( $attributes['align'] ) ) {
		$class .= " align{$attributes['align']}";
	}

	// Get terms awards
	$master_awards = array();
	$master_awards_id = array();
	$awards = array();
	$awards_id = array();

	// Master awards
	$master_awards_args = array(
		'taxonomy' => 'award',
		'posts_per_page' => -1,
		'orderby'  => array( 'menu_order' => 'DESC', 'title' => 'ASC' ), //'meta_value_num' => 'DESC', 
		'hide_empty' => false,
		//'hierarchical' => false,
		'parent' => 0,
		'meta_query' => array(
			array(
				'key' => 'wpcf-a-master',
				'compare' => '=',
				'value' => '1',
			),
		),
	);
	$master_awards = get_terms( $master_awards_args );
	if ( ! empty( $master_awards ) && ! is_wp_error( $master_awards ) ) {
        $master_awards_id = wp_list_pluck( $master_awards, 'term_id' );
	}
	//echo "blocks.php:: master awards IDs"; print_r($master_awards_id);

	// Awards
	$awards_args = array(
		'taxonomy' => 'award',
		'posts_per_page' => -1,
		'orderby'  => array( 'menu_order' => 'DESC', 'title' => 'ASC' ), //'meta_value_num' => 'DESC', 
		'hide_empty' => false,
		//'hierarchical' => false,
		'parent' => 0,
		'meta_query' => array(
			array(
				'key' => 'wpcf-a-master',
				'compare' => '=',
				'value' => '0',
			),
		),
	);
	$awards = get_terms( $awards_args );
	if ( ! empty( $awards ) && ! is_wp_error( $awards ) ) {
		$awards_id = wp_list_pluck( $awards, 'term_id' );
	}
	//echo "blocks.php:: awards IDs"; print_r($awards_id);

	// Get posts
	$master_awards_films = array();
	$awards_films = array();
	$edition = (int)$attributes['data']['waff_a_edition'];
	/*if ( !isset($edition) ) 
		echo esc_html__( 'Please choose an edition', 'waff' );*/
	$edition = ( isset($edition) && $edition != null && $edition != 0 )?$edition:$current_edition_id;

	// Master awards Films
	$master_awards_films_args = array(
		'post_type' => 'film',
		'posts_per_page' => -1,
		'post_status' => 'publish',
		// In edition
		'tax_query' => array(
			'relation' => 'AND',
			array (
				'taxonomy' => 'award',
				'field' => 'term_id',
				'terms' => array_values($master_awards_id),
			),
			array (
				'taxonomy' => 'edition',
				'field' => 'term_id',
				'terms' => array($edition),
			),
		),
		// Order by 
		'orderby'  => array( 'taxonomy' => 'DESC', 'menu_order' => 'DESC', 'date' => 'DESC' ),
	);
	$master_awards_films = get_posts( $master_awards_films_args ); 

	// Awards Films
	$awards_films_args = array(
		'post_type' => 'film',
		'posts_per_page' => -1,
		'post_status' => 'publish',
		// In edition
		'tax_query' => array(
			'relation' => 'AND',
			array (
				'taxonomy' => 'award',
				'field' => 'term_id',
				'terms' => array_values($awards_id),
			),
			array (
				'taxonomy' => 'edition',
				'field' => 'term_id',
				'terms' => array($edition),
			),
		),
		// Order by 
		'orderby'  => array( 'taxonomy' => 'DESC', 'menu_order' => 'DESC', 'date' => 'DESC' ),
	);
	$awards_films = get_posts( $awards_films_args ); 
	
	$empty_awards = '';
	if ( 
		( empty( $master_awards_films ) || is_wp_error( $master_awards_films ) )
		&&
		( empty( $awards_films ) || is_wp_error( $awards_films ) )
	) {
		$empty_awards = esc_html__( 'Be patient ! Awards has not been published yet', 'waff' );
	}

	// Get edition year
	$edition_year 			= get_term_meta( $edition, 'wpcf-e-year', true );
	$edition_name 			= get_term( $edition )->name;

	// Get section by edition year
	$section_args = array(
		'taxonomy' => 'section',
		'posts_per_page' => -1,
		'orderby'  => array( 'menu_order' => 'DESC', 'title' => 'ASC' ), //'meta_value_num' => 'DESC', 
		'hide_empty' => false,
		//'hierarchical' => false,
		'parent' => 0,
		'meta_query' => array(
			array(
				'key' => 'wpcf-select-edition',
				'compare' => '=',
				'value' => $edition,
			),
		),
	);
	$the_edition_section = get_terms( $section_args );
	$terms_list = array();
	if ( ! empty( $the_edition_section ) ) :
		foreach( $the_edition_section as $term ) {
			$termcolor 		= get_term_meta( $term->term_id, 'wpcf-s-color', true );
			$terms_list[] = sprintf('<a class="section-item" %s href="%s" title="%s">%s</a>',
				(($termcolor!='')?'style="background-color:'.$termcolor.'"':''),
				esc_url(get_term_link($term)),
				esc_html__($term->name),
				esc_html__($term->name)
			);
		}
	endif;

	$display = mb_get_block_field( 'waff_a_display' );
	$display_master_awards 	= ( $display == 2 )?false:true; 
	$display_awards 		= ( $display == 1 )?false:true; 

	?>
	<!-- #Awards -->
	<section id="awards-<?= $id ?>" class="<?= $class ?>" style="background-color: <?= mb_get_block_field( 'background_color' ) ?>">
		<div class="container-fluid px-0">
			<hgroup class="text-center">
				<h6 class="headline d-inline-block"><?= mb_get_block_field( 'waff_a_title' ) ?></h6>
				<h1 class="award-title mt-0 mb-0 display-1"><?= $edition_year; ?></h1>
				<?php
					if ( $terms_list ) {
						printf(
							/* translators: %s: list of categories. */
							'<div class="section-list d-inline cat-links"><span class="screen-reader-text">%s </span>%s</div>',
							esc_html__( 'Categorized as', 'waff' ),
							implode($terms_list, __( '&#8203;', 'waff' )) // phpcs:ignore WordPress.Security.EscapeOutput
						);
					}
				?>
				<h6 class="visually-hidden">Le palmarès de l'édition <?= $edition_name; ?> du Festival Internationnal du Film d'Amiens</h6>
			</hgroup>

			<?php if ( mb_get_block_field( 'waff_a_leadcontent' ) ) : ?>
			<p class="lead mt-2 mt-sm-6"><?= waff_do_markdown(mb_get_block_field( 'waff_a_leadcontent' )) ?></p>
			<?php endif; ?>

			<?php if ( mb_get_block_field( 'waff_a_content' ) ) : ?>
			<p class="mt-1 mt-sm-3"><?= waff_do_markdown(mb_get_block_field( 'waff_a_content' )) ?></p>
			<?php endif; ?>

			<!-- Empty -->
			<?php if ( $empty_awards != '' ) : ?>
			<div class="alert text-center">
				<p><?= $empty_awards ?></p>
			</div>
			<?php endif; ?>

			<!-- Master awards -->
			<?php if ( ! empty( $master_awards_films ) && ! is_wp_error( $master_awards_films )	&& $display_master_awards == true ) : ?>
			<section class="text-center">
				<hr class="vertical-separator h-80-px mt-2 mb-2" size></hr>
				<p class="headline d-inline-block mx-auto"><?= esc_html__( 'Master awards', 'waff' ); ?></p>
			</section>

			<?php print(wa_awards_get_films($master_awards_films, true)); ?>

			<?php endif; // END:: if Master awards ?>

			<!-- Awards -->
			<?php if ( ! empty( $awards_films ) && ! is_wp_error( $awards_films ) && $display_awards == true ) : ?>
			<section class="text-center">
				<hr class="vertical-separator h-80-px mt-2 mb-2" size></hr>
				<p class="headline d-inline-block mx-auto d-none"><?= esc_html__( 'Awards', 'waff' ); ?></p>
			</section>

			<?php print(wa_awards_get_films($awards_films, false)); ?>

			<?php endif; // END:: if Awards ?>

			<!-- More button-->
			<?php if ( mb_get_block_field( 'waff_a_morelink' ) == 1 ) : ?>
			<div class="--d-grid --gap-2 mt-2 mt-sm-6 mb-2 mb-sm-6 text-center">
				<a class="btn btn-outline-dark mt-4" href="<?= mb_get_block_field( 'waff_a_moreurl' ) ?>"><?= esc_html__( 'All the awards', 'waff' ); ?></a>
			</div>
			<?php endif; ?>

		</div>
	</section>
	<!-- END: #Awards -->
	<?php
}

function wa_awards_get_films( $films, $master = true ) {
	$html = '<div class="row award-list ' . (($master == true)?'master-':'') . 'awards">';
	
	foreach($films as $film) {
		$f_id						= $film->ID;
		$f_title 					= (( $film->post_title )?get_the_title($f_id):$film->post_title);
		$f_french_operating_title 	= get_post_meta( $f_id, 'wpcf-f-french-operating-title', true );
		$f_movie_length 			= get_post_meta( $f_id, 'wpcf-f-movie-length', true );
		$f_author 					= get_post_meta( $f_id, 'wpcf-f-author', true );
		$f_author 					= esc_html($f_author['firstname']) . ' <strong>' . esc_html($f_author['lastname']) . '</strong>';
		$f_director_contact 		= get_post_meta( $f_id, 'wpcf-c-e-director-contact', true );
		$f_color 					= get_post_meta( $f_id, 'film-color', true );

		$featured_img_caption = '';
		$featured_img_description = '';

		$f_image = '';
		// Featured image
		$featured_img_urls = array();
		if ( $master == false && has_post_thumbnail($f_id) ) { 
			$post_featured_sizes = array(
				'post-featured-image-s', 
				'post-featured-image-s-x2',
				'post-featured-image-m', 
				'post-featured-image-m-x2',
			);
			$featured_img_id     		= get_post_thumbnail_id($f_id);
			$featured_img_url_full 		= get_the_post_thumbnail_url($f_id);
			foreach ($post_featured_sizes as $size) {
				$featured_img_url = wp_get_attachment_image_src( $featured_img_id, $size ); // OK
				$featured_img_urls[$size] = ( !empty($featured_img_url[0]) )?$featured_img_url[0]:$featured_img_url_full; 
			}
			$alt = get_post_meta ( get_post_thumbnail_id(), '_wp_attachment_image_alt', true );
			$featured_img_caption = wp_get_attachment_caption($featured_img_id); // ADD WIL                    
			$thumb_img = get_post( $featured_img_id ); // Get post by ID
			$featured_img_description =  $thumb_img->post_content; // Display Description
			// Render image 
			$f_image = sprintf('<figure class="w-100 %s fit-image" %s>
					<picture class="lazy">
					<data-src media="(min-width: 590px)"
							srcset="%s 2x,
									%s" type="image/jpeg"></data-src>
					<data-src media="(min-width: 380px)"
							srcset="%s 2x,
									%s" type="image/jpeg"></data-src>
					<data-img src="%s" class="w-100 img-fluid %s fit-image" alt="%s"></data-img>
					</picture>
					%s
				</figure>',
				($master == true)?'h-340-px':'h-200-px',
				( $featured_img_description )?'title="'.esc_html($featured_img_description).'"':'title="'.esc_html($f_title).'"',
				$featured_img_urls['post-featured-image-m-x2'],
				$featured_img_urls['post-featured-image-m'],
				$featured_img_urls['post-featured-image-s-x2'],
				$featured_img_urls['post-featured-image-s'],
				$featured_img_urls['post-featured-image-s'],
				($master == true)?'h-340-px':'h-200-px',
				( $featured_img_caption )?esc_html($featured_img_caption):esc_html($f_title),
				( $featured_img_caption || $featured_img_description )?'<figcaption><strong>© '. esc_html($featured_img_caption) .'</strong> '. esc_html($featured_img_description) .'</figcaption>':'',
			);
		}

		// Poster image
		$f_poster = '';
		if ( $master == true ) { 
			$f_poster 							= get_post_meta( $f_id, 'wpcf-f-film-poster', true ); // Medium large
			$f_poster_ID 						= waff_get_image_id_by_url($f_poster);
			$featured_img_caption 				= wp_get_attachment_caption($f_poster_ID); // ADD WIL                    
			$thumb_img 							= get_post($f_poster_ID); // Get post by ID
			$featured_img_description 			= $thumb_img->post_content; // Display Description
			if ( function_exists( 'types_render_field' ) ) {
				$f_poster 						= types_render_field( 'f-film-poster', 
					array( 'item' => $f_id, 'size' => 'medium_large', 'alt' => esc_html($featured_img_caption), 'class' => 'w-100 img-fluid fit-image ' . (($master == true)?'h-340-px':'h-200-px' ) )
				); //'width' => '28', 'height' => '28', 'proportional' => 'false', 
			}
			// Render image 
			$f_image = sprintf('<figure class="w-100 %s fit-image" %s>
					<picture class="lazy">
						%s
					</picture>
					%s
				</figure>',
				($master == true)?'h-340-px':'h-200-px',
				( $featured_img_description )?'title="'.esc_html($featured_img_description).'"':'title="'.esc_html($f_title).'"',
				$f_poster,
				( $featured_img_caption || $featured_img_description )?'<figcaption><strong>© '. esc_html($featured_img_caption) .'</strong> '. esc_html($featured_img_description) .'</figcaption>':'',
			);
		}

		// Get terms
		$f_sections 				= get_the_terms( $f_id, 'section' );
		$html_f_section = '';
		if ( ! empty( $f_sections ) && ! is_wp_error( $f_sections ) ) {
			$html_f_section .= ($master == false)?'<div class="section-list d-inline cat-links">':'';
			foreach($f_sections as $f_section) {
				$f_section_color 	= get_term_meta( $f_section->term_id, 'wpcf-s-color', true );
				$f_section_edition 	= get_term_meta( $f_section->term_id, 'wpcf-select-edition', true );
				
				if ($master == true)
					$html_f_section .= sprintf('<a href="%s" %s class="dot-section" data-toggle="tooltip" data-container=".modal" data-title="%s" data-original-title="" title="">•</a>',
						esc_url(get_term_link($f_section->slug, 'section')),
						(( $f_section_color != '' )?'style="color: '.$f_section_color.';"':''),
						esc_html__($f_section->name)
					);
				else
					$html_f_section .= sprintf('<a href="%s" class="section-item" %s title="%s">%s</a>',
						esc_url(get_term_link($f_section, 'section')),
						(( $f_section_color!='' )?'style="background-color:'.$f_section_color.'"':''),
						esc_html__($f_section->name),
						esc_html__($f_section->name)
					);
			}
			$html_f_section .= ($master == false)?'</div>':'';
		}
		
		// Get award
		$f_awards 				= get_the_terms( $f_id, 'award' );
		$f_award_light_img = '';
		$f_award_dark_img = '';
		$f_award_name = '';
		if ( ! empty( $f_awards ) && ! is_wp_error( $f_awards ) ) foreach ($f_awards as $f_award) {
			$f_award_light_img 	= get_term_meta( $f_award->term_id, 'wpcf-a-light-image', true );
			$f_award_dark_img 	= get_term_meta( $f_award->term_id, 'wpcf-a-dark-image', true );
			$f_award_name 		= $f_award->name; 
			//if ( in_array( $f_award->term_id, $master_awards) )
				//print_r($f_award->term_id);
		}

		$html .= '<div class="col-12 col-md-' . ( ($master == true)?12/count($films):3 ) . ' award-item ' . (($master == true)?'master-':'') . 'award">';

		// Print film / <img src="%s" class="w-100 %s fit-image" alt="%s">
		$html .= sprintf('<div class="card film-card flex-row flex-wrap bg-color-dark my-2 border-0 %s" %s data-film-id="%d" data-aos="flip-up" data-aos-delay="100">
			<!-- Film -->
			<div class="card-featured overflow-hidden %s">
				<a href="%s" class="d-flex flex-column flex-wrap align-items-start justify-content-middle h-100 w-100 bg-bgcolor-lighten">
					%s
				</a>
			</div>
			<div class="card-body p-4 d-flex flex-column justify-content-center text-center %s">
				<div>
					<img src="%s" class="w-100 mw-180-px fit-image mb-4 mb-sm-3" alt="%s">
					<h5 class="card-title mb-0"><a href="%s" class="text-link">%s</a> %s</h5>
					%s
				</div>
				<div class="pt-3 --pb-4">
					<a %s class="card-text">%s</a>
				</div>
				<div>
					<a href="%s" class="card-link link-black stretched-link pt-2 d-none"><i class="icon icon-arrow"></i></a>
				</div>
			</div>
			<!-- Ribbon -->
			<div class="ribbon-wrapper d-none"><div class="ribbon">Special</div></div>
		</div>',
			($master == true)?'h-340-px shadow-lg card-white':'h-400-px shadow-sm card-dark',
			( $f_color != '' )?'style="background-color:#'.$f_color.';"':'style="background:'.(($master == true)?'black':'white').';"',
			esc_attr( $f_id ),
			//
			($master == true)?'w-45':'h-50',
			esc_url(get_permalink( $f_id )),
			$f_image,
			//
			($master == true)?'w-55':'h-50',
			($master == true)?$f_award_light_img:$f_award_dark_img,
			($f_award_name)?$f_award_name:esc_html__( 'Award', 'waff' ),
			esc_url(get_permalink( $f_id )),
			( $f_french_operating_title != '' )?$f_french_operating_title.' <span class="muted">('.$f_title.')</span>':$f_title,
			( $f_movie_length != '' )?'<span class="length">'.$f_movie_length.'\'</span>':'',
			$html_f_section,
			( $f_director_contact != null || $f_director_contact != '' )?'href="'.get_permalink( $f_director_contact ).'"':'',
			$f_author,
			esc_url(get_permalink( $f_id )),
		);

		$html .= '</div>';
	} // END: Foreach
	$html .= '</div>';

	return $html;
}

function wa_playlist_callback( $attributes, $is_preview = false, $post_id = null ) {
	
	//print_r($attributes);
	//global $current_edition_id, $current_edition_films_are_online;
	//https://codepen.io/tommydunn/pen/rNxQLNq?editors=1010

	// Fields data.
	if ( empty( $attributes['data'] ) ) {
		return;
	}
	
	// Unique HTML ID if available.
	$id = ( $attributes['name'] ?? '' ) . '-' . ( $attributes['id'] ?? '' );
	if ( ! empty( $attributes['anchor'] ) ) {
		$id = $attributes['anchor'];
	}

	// Custom CSS class name.
	$themeClass = 'playlist mt-5 mt-sm-10 mb-5 mb-sm-10 contrast--light';
	$class = ( $attributes['name'] ?? '' ) . ' ' . $themeClass . ' ' . ( $attributes['className'] ?? '' );
	if ( ! empty( $attributes['align'] ) ) {
		$class .= " align{$attributes['align']}";
	}

	?>
	<!-- #Playlist -->
	<section id="playlist-<?= $id ?>" class="<?= $class ?>" style="background-color: <?= mb_get_block_field( 'background_color' ) ?>">
		<div class="container-fluid px-0">
			<hgroup class="text-center">
				<h6 class="headline d-inline-block"><?= mb_get_block_field( 'waff_pl_title' ) ?></h6>
			</hgroup>

			<?php if ( mb_get_block_field( 'waff_pl_leadcontent' ) ) : ?>
			<p class="lead mt-1 mt-sm-3 mb-1 mb-sm-3 text-center w-75 mx-auto"><?= waff_do_markdown(mb_get_block_field( 'waff_pl_leadcontent' )) ?></p>
			<?php endif; ?>

			<?php if ( mb_get_block_field( 'waff_pl_content' ) ) : ?>
			<p class="mt-0 mt-sm-2 mb-1 mb-sm-3 text-center w-75 mx-auto"><?= waff_do_markdown(mb_get_block_field( 'waff_pl_content' )) ?></p>
			<?php endif; ?>

			<?php if ( mb_get_block_field( 'waff_pl_videos' ) ) : 
				$autoplay = (mb_get_block_field( 'waff_pl_autoplay' ))?'autoplay':''; 
			?>
			<div class="slider-youtube slick-dark <?= $autoplay; ?>">

				<?php $idx = 0; foreach ( mb_get_block_field( 'waff_pl_videos' ) as $video_link) :
					$playlist = ( mb_get_block_field( 'waff_pl_playlist' ) != '' )?'&amp;listType=playlist&amp;list='.esc_attr(mb_get_block_field( 'waff_pl_playlist' )):'';
					$idx++;
				?>
					<div class="item youtube">
						<iframe id="<?= $idx; ?>" class="embed-player slide-media" src="https://www.youtube.com/embed<?= esc_attr(parse_url($video_link, PHP_URL_PATH)); ?>?s&controls=0&amp;showinfo=0&amp;loop=1&amp;enablejsapi=1&amp;origin=https://www.fifam.com&amp;iv_load_policy=3&amp;rel=0&amp;modestbranding=1&amp;start=1<?= $playlist ?>" frameborder="0" allowfullscreen></iframe>
						<div class="slick-button">
							<a class="btn btn-sm" href="<?= $video_link; ?>"><?= __('See video', 'waff'); ?></a>
						</div>
					</div>
				<?php endforeach; ?>

			</div>
			<?php endif; ?>

		</div>
		<!-- Local styles -->
		<style>
			.slider-youtube .item {
				opacity: 1;
				filter: blur(0);

				background: #000;
				/*z-index: -99;*/
				max-height: 200px;
				border-radius:5px; 
				margin:10px;
			}

			.slider-youtube .item:not(.slick-current) {
				opacity: 0.4;
				transition: opacity 1s;
				border-radius:5px; 
				filter: blur(1px);
			}

			.slider-youtube .item iframe {
				width: 100%;
				/*z-index:100;*/
				height: 200px;
				min-width: 300px;
				<?= ( mb_get_block_field( 'waff_pl_autoplay' )?'pointer-events: none;':''); ?> /* Can slide */
				border-radius:5px; 
			}

			.slick-button {
				position: relative;
				bottom: 60px;
				text-align: center;
				z-index: 9999;
			}

			.slick-button a {
				color: white;
				background-color: black;
			}
		</style>
		<!-- Local scripts -->
		<script>
			// Loads the IFrame Player API code asynchronously.
			var tag = document.createElement('script');

			tag.src = "https://www.youtube.com/iframe_api";
			var firstScriptTag = document.getElementsByTagName('script')[0];
			firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

			// POST commands to YouTube or Vimeo API
			function postMessageToPlayer(player, command){
				console.log(command);
				if (player == null || command == null) return;
				player.contentWindow.postMessage(JSON.stringify(command), "*");
			}

			// API calls this function after scripts loaded.
			// after the API code downloads.
			/* function onYouTubeIframeAPIReady() {
				console.log('YT ready');

				jQuery(document).ready(function($) {

					var slideWrapper = $(".slider-youtube"),
					iframes = slideWrapper.find('.embed-player'),

					iframes.each(function (idx) {
						$(this).addClass("data-idx-" + idx).data("idx", idx);
					});

					function getPlayer (iframe, onPlayerReady, clonned) {
						var $iframe = $(iframe);
						if ($iframe.data((clonned ? "clonned-" : "") + "player")) {
							var isReady = $iframe.data((clonned ? "clonned-" : "") + "player-ready");
						if (isReady) {
							onPlayerReady && onPlayerReady($iframe.data((clonned ? "clonned-" : "") + "player"));
						}        	
							return player;
						}
						else {
							var player = new YT.Player($iframe.get(0), {
							events: {
							'onReady': function () {
								$iframe.data((clonned ? "clonned-" : "") + "player-ready", true);
								onPlayerReady && onPlayerReady(player);
							}
							}
						});        
						$iframe.data((clonned ? "clonned-" : "") + "player", player);
						return player;
						}    		
					}
				
					//on first load, play the video
					$(".slider-youtube").on('init', function(event, slick, currentSlide) {
						var currentSlide, iframe, player;
						console.log('Init');
						currentSlide = $(slick.$slider).find(".slick-current");
						iframe = currentSlide.find("iframe");        
						getPlayer(iframe, function (player) {
							player.pauseVideo();
							updateClonnedFrames();
							//player.playVideo();
							setTimeout(function () {
								player.playVideo();
							}, 100);    
						});
					});

					//when new slide displays, play the video
					$(".slider-youtube").on("afterChange", function(event, slick) {
						var currentSlide, iframe, player;
						console.log('afterChange');
						currentSlide = $(slick.$slider).find(".slick-current");
						iframe = currentSlide.find("iframe");        
						getPlayer(iframe, function (player) {
							//player.pauseVideo();
							setTimeout(function () {
								player.playVideo();
							}, 100);    
						});
					});
				
					function updateClonnedFrames () {
						frames = $(".slider-youtube").find(".slick-slide").not(".slick-cloned").find("iframe");
						frames.each(function () {
							var frame = $(this);
							var idx = frame.data("idx");
							clonedFrames = $(".slider-youtube").find(".slick-cloned .data-idx-" + idx);
							console.log("clonedFrames", frame, idx, clonedFrames);
							clonedFrames.each(function () {
								var clonnedFrame = this;
								getPlayer(frame[0], function (player) {
								getPlayer(clonnedFrame, function (clonedPlayer) {         
								console.log("clonnedPlayer", clonedPlayer);
								clonedPlayer.playVideo();  
								clonedPlayer.seekTo(player.getCurrentTime(), true);
								setTimeout(function () {
									clonedPlayer.pauseVideo();         
								}, 0);              
								}, true);
							});
							});        
						});    	    	
					}
					
					//reset iframe of non current slide
					$(".slider-youtube").on('beforeChange', function(event, slick, currentSlide) {
						var currentSlide, iframe, clonedFrame;
						currentSlide = $(slick.$slider).find(".slick-current");
						iframe = currentSlide.find("iframe");        
						getPlayer(iframe, function (player) {   
							player.pauseVideo();
							updateClonnedFrames();
						});          
					});

					//Start the slider
					$('.slider-youtube').slick({
						slidesToShow: 1,
						arrows: true,
						dots: true,
						centerMode: true,
						centerPadding: '50px',
						infinite: true,
						variableWidth: true
					});
				});
			} */

			var slideWrapper = jQuery(".slider-youtube"),
					iframes = slideWrapper.find('.embed-player');

			var autoplay = false;
			if ( slideWrapper.attr("class").split(" ")[2] != '' ) { autoplay = true; }
			//console.log(autoplay);

			// When the slide is changing
			function playPauseVideo(slick, control){
				var currentSlide, slideType, startTime, player, video;

				currentSlide = slick.find(".slick-current");
				slideType = currentSlide.attr("class").split(" ")[1];
				player = currentSlide.find("iframe").get(0);
				startTime = currentSlide.data("video-start");

				console.log(player);
				console.log(slideType);
				console.log(control);

				if (slideType === "vimeo") {
					switch (control) {
					case "play":
						if ((startTime != null && startTime > 0 ) && !currentSlide.hasClass('started')) {
						currentSlide.addClass('started');
						postMessageToPlayer(player, {
						"method": "setCurrentTime",
						"value" : startTime
						});
						}
						postMessageToPlayer(player, {
						"method": "play",
						"value" : 1
						});
						break;
					case "pause":
						postMessageToPlayer(player, {
						"method": "pause",
						"value": 1
						});
						break;
					}
				} else if (slideType === "youtube-sound") {
					switch (control) {
					case "play":
						/*postMessageToPlayer(player, {
						"event": "command",
						"func": "unMute"
						});*/
						postMessageToPlayer(player, {
						"event": "command",
						"func": "playVideo"
						});
						postMessageToPlayer(player, {
						"event": "command",
						"func": "unMute"
						});
						break;
					case "pause":
						postMessageToPlayer(player, {
						"event": "command",
						"func": "pauseVideo"
						});
						break;
					}
				}  else if (slideType === "youtube") {
					switch (control) {
					case "play":
						postMessageToPlayer(player, {
						"event": "command",
						"func": "mute"
						});
						postMessageToPlayer(player, {
						"event": "command",
						"func": "playVideo"
						});
						break;
					case "pause":
						postMessageToPlayer(player, {
						"event": "command",
						"func": "pauseVideo"
						});
						break;
					}
				} else if (slideType === "video") {
					video = currentSlide.children("video").get(0);
					if (video != null) {
						if (control === "play"){
							video.play();
						} else {
							video.pause();
						}
					}
				}
			}

			// Resize player
			// function resizePlayer(iframes, ratio) {
			// 	if (!iframes[0]) return;
			// 	var win = jQuery(".slider-youtube"),
			// 		width = win.width(),
			// 		playerWidth,
			// 		height = win.height(),
			// 		playerHeight,
			// 		ratio = ratio || 16/9;

			// 	iframes.each(function(){
			// 		var current = jQuery(this);
			// 		if (width / ratio < height) {
			// 		playerWidth = Math.ceil(height * ratio);
			// 		current.width(playerWidth).height(height).css({
			// 			left: (width - playerWidth) / 2,
			// 			top: 0
			// 			});
			// 		} else {
			// 		playerHeight = Math.ceil(width / ratio);
			// 		current.width(width).height(playerHeight).css({
			// 			left: 0,
			// 			top: (height - playerHeight) / 2
			// 		});
			// 		}
			// 	});
			// }
		 
			// YT Iframe
		 	// function onYouTubeIframeAPIReady() {
			// 	console.log('YT ready');

				/*jQuery.each(iframes, function(idx, iframe) {
					//console.log(iframe);
					//console.log(iframe.id);
					var player = new YT.Player(iframe.id);
					//subscribe to events
					player.addEventListener("onReady",       "onYouTubePlayerReady");
					player.addEventListener("onStateChange", "onYouTubePlayerStateChange");
				});

				// YT event
				function onYouTubePlayerReady() {
					console.log('Video is ready to play');
				}

				// YT event
				function onYouTubePlayerStateChange(event) {
					console.log('Video state changed');
				}
				*/

				// DOM Ready
				jQuery(function($) {
					console.log('DOM ready');

					// Initialize
					slideWrapper.on("init", function(slick){
						console.log('init /  autoplay : ' + autoplay );
						slick = $(slick.currentTarget);
						setTimeout(function(){
							if ( autoplay == true ) { playPauseVideo(slick,"play"); }
						}, 1000);
						//resizePlayer(iframes, 16/9);
					});
					slideWrapper.on("beforeChange", function(event, slick) {
						console.log('beforeChange /  autoplay : ' + autoplay );
						slick = $(slick.$slider);
						playPauseVideo(slick,"pause");
					});
					slideWrapper.on("afterChange", function(event, slick) {
						console.log('afterChange /  autoplay : ' + autoplay );
						slick = $(slick.$slider);
						if ( autoplay == true ) { playPauseVideo(slick,"play"); }
					});
					slideWrapper.on("lazyLoaded", function(event, slick, image, imageSource) {
						lazyCounter++;
						if (lazyCounter === lazyImages.length){
						lazyImages.addClass('show');
						slideWrapper.slick("slickPlay");
						}
					});

					//Start the slider if slick exists
					if ($.fn.slick) {
						slideWrapper.slick({
							slidesToShow: 1,
							arrows: true,
							dots: true,
							centerMode: true,
							centerPadding: '50px',
							infinite: true,
							variableWidth: true,
							//fade:true,
							//autoplaySpeed:4000,
							//autoplay: true,
							//speed:600,
							lazyLoad:"progressive",
							cssEase:"cubic-bezier(0.87, 0.03, 0.41, 0.9)"
						});
					}

				});
			//  }// End YT Ifram ready 	

			// Resize event
			// jQuery(window).on("resize.slickVideoPlayer", function(){  
			// 	resizePlayer(iframes, 16/9);
			// });
		</script>
	</section>
	<!-- END: #Playlist -->
	<?php
}

/**
 * Disallow some blocks 
 * 
 */

/*
core/embed
core-embed/twitter
core-embed/youtube
core-embed/facebook
core-embed/instagram
core-embed/wordpress
core-embed/soundcloud
core-embed/spotify
core-embed/flickr
core-embed/vimeo
core-embed/animoto
core-embed/cloudup
core-embed/collegehumor
core-embed/dailymotion
core-embed/funnyordie
core-embed/hulu
core-embed/imgur
core-embed/issuu
core-embed/kickstarter
core-embed/meetup-com
core-embed/mixcloud
core-embed/photobucket
core-embed/polldaddy
core-embed/reddit
core-embed/reverbnation
core-embed/screencast
core-embed/scribd
core-embed/slideshare
core-embed/smugmug
core-embed/speaker
core-embed/ted
core-embed/tumblr
core-embed/videopress
core-embed/wordpress-tv
*/

/*
    [0] => complianz/document
    [1] => toolset-views/view-editor
    [2] => toolset-views/wpa-editor
    [3] => toolset-views/sorting
    [4] => toolset-views/view-pagination-block
    [5] => core/archives
    [6] => core/block
    [7] => core/calendar
    [8] => core/categories
    [9] => core/latest-comments
    [10] => core/latest-posts
    [11] => core/rss
    [12] => core/search
    [13] => core/shortcode
    [14] => core/social-link
    [15] => core/tag-cloud
    [16] => gravityforms/form
    [17] => coblocks/form
    [18] => coblocks/field-name
    [19] => coblocks/field-email
    [20] => coblocks/field-textarea
    [21] => coblocks/field-text
    [22] => coblocks/field-date
    [23] => coblocks/field-phone
    [24] => coblocks/field-radio
    [25] => coblocks/field-select
    [26] => coblocks/field-submit-button
    [27] => coblocks/field-checkbox
    [28] => coblocks/field-website
    [29] => coblocks/field-hidden
    [30] => coblocks/events
    [31] => coblocks/post-carousel
    [32] => coblocks/posts
    [33] => coblocks/social
    [34] => coblocks/social-profiles
    [35] => wp-bootstrap-blocks/container
    [36] => wp-bootstrap-blocks/row
    [37] => wp-bootstrap-blocks/column
    [38] => wp-bootstrap-blocks/button
    [39] => bcn/breadcrumb-trail
    [40] => meta-box/wa-lastest-posts
    [41] => meta-box/wa-partners
    [42] => meta-box/wa-edito
    [43] => toolset/map
*/

function waff_allowed_block_types( $allowed_block_types, $post ) {

	print_r($post->post_type);
	print_r($allowed_block_types);
	print_r(get_dynamic_block_names());

	// Fetch block names.
	//$block_names = get_dynamic_block_names();

	if ( $post->post_type !== 'page' ) {
        return $allowed_block_types;
    }
 
	//https://wordpress.org/support/article/blocks/
	//https://rudrastyh.com/gutenberg/remove-default-blocks.html
	//https://github.com/WordPress/gutenberg/issues/27913
	$core = array( 
		// General
		'core/paragraph',
		'core/image',
		'core/heading',
		'core/gallery',
		'core/list',
		'core/quote',
		'core/audio',
		'core/cover',
		'core/file',
		'core/video',

		// Embed 
		'core/embed',
		'core-embed/twitter',
		'core-embed/youtube',
		'core-embed/facebook',
		'core-embed/instagram',
		// core-embed/wordpress
		// core-embed/soundcloud
		// core-embed/spotify
		'core-embed/flickr',
		'core-embed/vimeo',
		// core-embed/animoto
		// core-embed/cloudup
		// core-embed/collegehumor
		// core-embed/dailymotion
		// core-embed/funnyordie
		// core-embed/hulu
		// core-embed/imgur
		'core-embed/issuu',
		// core-embed/kickstarter
		// core-embed/meetup-com
		// core-embed/mixcloud
		// core-embed/photobucket
		// core-embed/polldaddy
		// core-embed/reddit
		// core-embed/reverbnation
		// core-embed/screencast
		// core-embed/scribd
		// core-embed/slideshare
		// core-embed/smugmug
		// core-embed/speaker
		// core-embed/ted
		// core-embed/tumblr
		// core-embed/videopress
		// core-embed/wordpress-tv

		//
		// complianz/document
		// toolset-views/view-editor
		// toolset-views/wpa-editor
		// toolset-views/sorting
		// toolset-views/view-pagination-block
		// core/archives
		// core/block
		// core/calendar
		// core/categories
		// core/latest-comments
		// core/latest-posts
		// core/rss
		// core/search
		// core/shortcode
		// core/social-link
		// core/tag-cloud
		// gravityforms/form
		// coblocks/form
		// coblocks/field-name
		// coblocks/field-email
		// coblocks/field-textarea
		// coblocks/field-text
		// coblocks/field-date
		// coblocks/field-phone
		// coblocks/field-radio
		// coblocks/field-select
		// coblocks/field-submit-button
		// coblocks/field-checkbox
		// coblocks/field-website
		// coblocks/field-hidden
		// coblocks/events
		// coblocks/post-carousel
		// coblocks/posts
		// coblocks/social
		// coblocks/social-profiles
		// wp-bootstrap-blocks/container
		// wp-bootstrap-blocks/row
		// wp-bootstrap-blocks/column
		// wp-bootstrap-blocks/button
		// bcn/breadcrumb-trail
		// meta-box/wa-lastest-posts
		// meta-box/wa-partners
		// meta-box/wa-edito
		// toolset/map
	);
	
	return array_merge($core,get_dynamic_block_names());

}



/**
 * Define new colors for wp-bootstrap-blocks 
 */

function waff_wp_boostrap_enqueue_block_editor_assets() {
	wp_enqueue_script( 'wp-bootstrap-block-filter', get_stylesheet_directory_uri() . '/dist/js/admin/custom-wp-bootstrap-blocks.js', array( 'wp-hooks' ), '1.0.0', true );
    if ( defined( 'WAFF_THEME_COLORS' ) ) wp_localize_script( 'wp-bootstrap-block-filter', 'wpBootstrapBlockFilterOptions', WAFF_THEME_COLORS );
}
